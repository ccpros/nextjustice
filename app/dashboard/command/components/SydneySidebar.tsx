"use client";

import { useState } from "react";

interface SydneySidebarProps {
  compact?: boolean;
  onCodeUpdate?: (code: string) => void;
  aiResponse: string;
  setAiResponse: (msg: string) => void;
}

export default function SydneySidebar({
  compact = false,
  onCodeUpdate,
  aiResponse,
  setAiResponse,
}: SydneySidebarProps) {
  const [input, setInput] = useState("");

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim()) return;

    // Simulate AI logic or hook into backend
    const simulated = `Here's an AI answer for: "${input}"`;
    setAiResponse(simulated);

    if (onCodeUpdate) {
      const codeSnippet = `// Generated code for: ${input}\nconsole.log("Generated by Sydney AI");`;
      onCodeUpdate(codeSnippet);
    }

    setInput("");
  };

  return (
    <div className={`h-auto p-4 border-l ${compact ? "w-64" : "w-80"} bg-gray-900 text-white flex flex-col`}>
      <h2 className="text-lg font-semibold mb-2">Sydney (AI)</h2>

      <form onSubmit={handleSubmit} className="space-y-2 mb-4">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          placeholder="Ask Sydney for help..."
          className="w-full px-3 py-2 rounded border border-gray-600 bg-gray-800 text-sm"
        />
        <button
          type="submit"
          className="w-full bg-blue-600 hover:bg-blue-500 text-white py-2 rounded text-sm"
        >
          Send
        </button>
      </form>

      <div className="bg-gray-800 border border-gray-700 rounded p-3 text-sm whitespace-pre-wrap overflow-auto">
        {aiResponse || "Sydneyâ€™s replies will show up here."}
      </div>
    </div>
  );
}
